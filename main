void setup(){
  size(500, 500);
}

Ball ball = new Ball(250,250,50,10);

void draw(){
  background(54, 50, 50);

  ball.changePos();

  
  fill(214, 24, 24);
  ellipse(ball.x, ball.y, ball.radius, ball.radius);
    
}

void mousePressed(){
  ball.initialPos();
}
void mouseReleased(){
  ball.applyInitialForce();
}

class Ball{
  int radius;
  int mass;
  
  float x;
  float y;
  
  float xVelocity;
  float yVelocity;
  
  float xAccel;
  float yAccel;
  
  int xMouseInitial,yMouseInitial;
  int initialTime;
  
  boolean pressed;
  
  float xInitialForce;
  float yInitialForce;
  float gravityForce;
  
  float netYForce;
  float netXForce;
  
  public Ball(int x, int y,int r, int m){
    this.x=x;
    this.y=y;
    radius = r;
    mass=m;
    xVelocity=0;
    yVelocity=0;
    xAccel=0;
    yAccel=0;
    pressed=false;
    gravityForce=mass*9.8;
  }
  
  void initialPos(){
    if(!pressed){
      initialTime = frameCount;
      xMouseInitial=mouseX;
      yMouseInitial=mouseY;
      pressed = true;
    }
  }
  
  void applyInitialForce(){
    float xChange = mouseX-xMouseInitial;
    float yChange = mouseY-yMouseInitial;
    int timeChange=frameCount-initialTime;
    xVelocity=xChange/timeChange;
    yVelocity=yChange/timeChange;
    
    xAccel=xVelocity/(frameCount-initialTime);
    yAccel=yVelocity/(frameCount-initialTime);
    System.out.println(xAccel+" "+yAccel);
    
    xInitialForce=xAccel*mass;
    yInitialForce=yAccel*mass;
    System.out.println(xInitialForce+" "+yInitialForce);
  }
  
  void changePos(){
    x += xVelocity;
    y += yVelocity;
    
    if(x > width-radius/2 || x < radius/2){
      xVelocity *= -1;
    }
    if(y > height-radius/2 || y < radius/2){
      yVelocity *= -1;
    }
  }
}
